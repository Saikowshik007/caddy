jobtrackai.duckdns.org {
    # Automatic HTTPS with Let's Encrypt

    # Handle OPTIONS preflight globally
    @options method OPTIONS
    handle @options {
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD"
        header Access-Control-Allow-Headers "*"
        header Access-Control-Allow-Credentials "true"
        header Access-Control-Max-Age "3600"
        respond 204
    }

    # JobTrak API endpoints (microservice 2)
    handle /api/* {
        # Add CORS headers to all responses
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD"
        header Access-Control-Allow-Headers "*"
        header Access-Control-Allow-Credentials "true"
        header Access-Control-Expose-Headers "*"

        # Load balance across 3 API instances
        reverse_proxy jobtrak-api-1:8000 jobtrak-api-2:8000 jobtrak-api-3:8000 {
            lb_policy round_robin
            health_uri /health
            health_interval 30s
            health_timeout 10s
            health_status 2xx
        }
    }

    # Learning Platform endpoints (microservice 1)
    handle /learn/* {
        # Add CORS headers
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD"
        header Access-Control-Allow-Headers "*"
        header Access-Control-Allow-Credentials "true"
        header Access-Control-Expose-Headers "*"

        # Reverse proxy to learning backend
        reverse_proxy learning-platform-backend:5000
    }

    # Root endpoint
    handle / {
        header Access-Control-Allow-Origin "*"
        respond "JobTrak Services Running" 200
    }

    # Health check aggregation endpoint
    handle /health {
        header Access-Control-Allow-Origin "*"
        reverse_proxy jobtrak-api-1:8000
    }
}